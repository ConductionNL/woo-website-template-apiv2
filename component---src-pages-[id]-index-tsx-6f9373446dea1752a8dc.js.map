{"version":3,"file":"component---src-pages-[id]-index-tsx-6f9373446dea1752a8dc.js","mappings":"+PAQWA,EAAW,gD,yFCRf,MAAMC,EAAcC,IACzB,IAAKA,EAAK,OAEV,MAAMC,EAAkBD,EAAIE,YAAY,KAExC,OADgBF,EAAIG,UAAUF,EAAkB,I,sDC6B3C,MAAMG,EAA8DC,IAAoB,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAlB,UAAEC,GAAWP,EACvF,MAAM,EAAEQ,EAAC,KAAEC,IAASC,EAAAA,EAAAA,MAEdC,EAAc,IAAIC,EAAAA,YAClBC,GAAWC,EAAAA,EAAAA,GAAWH,GAAaI,OAAOR,IAE1C,WAAES,EAAU,cAAEC,IAAkBC,EAAAA,EAAAA,MAC/BC,EAAeC,GAAoBC,EAAAA,SAAuBL,EAAWM,aAEtEC,GAA6BT,EAAAA,EAAAA,GAAWH,GAAaa,yBAAyBjB,GAC9EkB,GAA2BX,EAAAA,EAAAA,GAAWH,GAAae,uBAAuBnB,EAAW,GAAIY,GAEzFQ,EAAeA,CAACC,EAAQC,IAAWD,EAAEE,MAAMC,cAAcF,EAAEC,MAAOrB,EAAKuB,SAAU,CAAEC,SAAS,IAE5FC,EAAYC,IAChB,OAAQC,IAAaD,IACnB,IAAK,oBACH,OAAO3B,EAAE,uBACX,IAAK,YACH,OAAOA,EAAE,aACX,IAAK,UACH,OAAOA,EAAE,YACX,IAAK,sBACH,OAAOA,EAAE,kBACX,QACE,OAAOA,EAAE4B,IAAaD,MAItBE,EAAWC,IAAkB,IAADC,EAAAC,EAChC,MAAMC,EAAgBH,EAAKI,QAAQ,KAAM,KAEnCC,EAAiBP,IAAaK,GAEpC,OAAQE,GACN,IAAK,cACH,OAAOnC,EAAE,YACX,IAAK,aACH,OAAOA,EAAE,eACX,IAAK,kBACH,OAAOA,EAAE,aACX,IAAK,YACH,OAAOA,EAAE,YACX,IAAK,iBACH,OAAOA,EAAE,gBACX,IAAK,UACH,OAAOA,EAAE,aACX,IAAK,gBACH,OAAOA,EAAE,UACX,IAAK,uBACH,OAAOA,EAAE,uBACX,QACE,OAAOA,EAAuD,QAAtD+B,EAA+C,QAA/CC,EAAC3B,EAAS+B,KAAK,SAASC,OAAOC,WAAWR,UAAK,IAAAE,OAAA,EAA9CA,EAAgDV,aAAK,IAAAS,EAAAA,EAAII,KAaxE,MAyDMI,EAA+B1B,EAAAA,QAAc,KAAO,IAAD2B,EACvD,IAAKzB,EAA2B0B,WAA6C,QAAhCD,EAACzB,EAA2BqB,YAAI,IAAAI,IAA/BA,EAAiCE,QAAS,MAAO,GAE/F,MAAMC,EAAc5B,EAA2BqB,KAAKM,QAEpD,IAAIE,EAAwB,GACxBC,EAAsB,GACtBC,EAAmB,GAEvBH,EAAYI,QAASC,IAAqB,IAADC,GAClB,QAAjBA,EAAAD,EAAWE,cAAM,IAAAD,OAAA,EAAjBA,EAAmBE,QAAS,GAC9BP,EAAeQ,KAAKJ,GACpBF,EAAUM,KAAIC,MAAdP,GAASQ,EAAAA,EAAAA,GAASN,EAAWE,WAE7BL,EAAaO,KAAKJ,GAClBF,EAAUM,KAAKJ,EAAWE,OAAO,OAIrC,MAAMK,EAAwB,GAC9BX,EAAeG,QAASC,IACtBA,EAAWE,OAAOH,QAAQ,CAACpB,EAAY6B,KACrCD,EAAeH,KAAIK,OAAAC,OAAC,CAAC,EAAIV,EAAW,CAACE,OAAQ,CAACF,EAAWE,OAAOM,WAIpE,MAAMG,EAAc,GAAAC,OAAOL,EAAmBV,GACxCgB,GAAYP,EAAAA,EAAAA,GAAO,IAAIQ,IAAIhB,IAG3BiB,EAAa,CAAC,oBAAqB,YAAa,UAAW,sBAAuB,WAsBxF,OAnBqBF,EAAaG,KAAK,CAAC5C,EAAQC,KAC9C,MAAM4C,EAAS7C,EAAE8C,cACXC,EAAS9C,EAAE6C,cACXE,EAASL,EAAWM,QAAQJ,GAC5BK,EAASP,EAAWM,QAAQF,GAGlC,OAAgB,IAAZC,IAA6B,IAAZE,EACZF,EAASE,GAIF,IAAZF,GAAuB,GACX,IAAZE,EAAsB,EAGnBL,EAAO1C,cAAc4C,EAAQlE,EAAKuB,SAAU,CAAEC,SAAS,MAG5C8C,IAAK5C,IAAU,CACjCgB,YAAagB,EAAea,OAAQC,GAAaA,EAAIvB,OAAOwB,SAAS/C,IACrEA,YAED,CAACZ,EAA2BqB,OAEzBuC,EAAsB9D,EAAAA,QAAc,KAAO,IAAD+D,EAC9C,OAAK3D,EAAyBwB,WAA2C,QAA9BmC,EAAC3D,EAAyBmB,YAAI,IAAAwC,GAA7BA,EAA+BlC,SACpEY,EAAAA,EAAAA,GAAIrC,EAAyBmB,KAAKM,SAASsB,KAAK7C,GADoC,IAE1F,CAACF,EAAyBmB,OAEvByC,EACJ5D,EAAyBwB,WAA0C,QAAjChD,EAAIwB,EAAyBmB,YAAI,IAAA3C,GAA7BA,EAA+BqF,MACjE7D,EAAyBmB,KAAK0C,MAC9BtE,EAAWM,YAQjB,OANAD,EAAAA,UAAgB,KACVI,EAAyBwB,WAAajC,EAAWM,cAAgBH,GACnEF,EAAc,CAAEK,YAAaH,KAE9B,CAACM,EAAyBwB,aAG3BsC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACG5E,EAASoC,YACRyC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAAF,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAA,SAAiBG,OAAOC,eAAeC,QAAQ,qBAAoB,OAAMC,EAAAA,EAAAA,GACvElF,EAAS+B,KAAKoD,YAIpBN,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAAAR,UACHF,EAAAA,EAAAA,MAACW,EAAAA,GAAW,CAACC,UF7OE,iDE6O0BV,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKU,KAAK,aAAYX,UACpBF,EAAAA,EAAAA,MAACc,EAAAA,GAAI,CACHF,UFjPQ,gDEkPRG,KAAK,IACLC,QAAUC,IACRA,EAAEC,kBAAkBC,EAAAA,EAAAA,IAAS,MAE/BC,SAAU,EACV,aAAYnG,EAAE,oBAAoBiF,SAAA,EAElCC,EAAAA,EAAAA,KAACkB,EAAAA,EAAe,CAACC,KAAMC,EAAAA,MAAe,KAACpB,EAAAA,EAAAA,KAAA,QAAAD,SAAOjF,EAAE,2BAInDK,EAASoC,WAAapC,EAAS+B,OAC9B2C,EAAAA,EAAAA,MAAA,OAAKY,UF5PI,+CE4PuBC,KAAK,SAAS,aAAY5F,EAAE,WAAWiF,SAAA,EACrEC,EAAAA,EAAAA,KAACqB,EAAAA,EAAQ,CACPC,GAAG,cACHL,SAAU,EACV,aAAenG,EAAE,wBAAuB,MAA2F,QAA3FN,EAAqE,QAArEC,EAA+C,QAA/CC,EAAwB,QAAxBC,EAAKQ,EAAS+B,KAAKd,aAAK,IAAAzB,EAAAA,EAAIQ,EAAS+B,KAAKoD,aAAK,IAAA5F,EAAAA,EAAIS,EAAS+B,KAAKN,YAAI,IAAAnC,EAAAA,EAAIU,EAAS+B,KAAKqE,YAAI,IAAA/G,EAAAA,EAAIW,EAAS+B,KAAKoE,IAAKvB,UAEzJM,EAAAA,EAAAA,IAAqBA,EAAAA,EAAAA,GAAwC,QAApBzF,EAACO,EAAS+B,KAAKoD,aAAK,IAAA1F,EAAAA,EAAIO,EAAS+B,KAAKd,WAGlF4D,EAAAA,EAAAA,KAACwB,EAAAA,GAAyB,CACxBC,WAAY,CACVC,iBAAkB5G,EAAE,4BACpB6G,kBAAmB7G,EAAE,8BACrBiF,UAEFC,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CAACnB,UFxQJ,6CEwQ4BV,UAC7BF,EAAAA,EAAAA,MAACgC,EAAAA,GAAS,CAACpB,UFxQN,iDEwQkCV,SAAA,CACpC5E,EAAS+B,MACRqB,OAAOuD,QAnKF5E,KAAe,IAAD6E,EAAAC,EAAAC,EACrC,MAAMC,EAAW,CACf,QACA,QACA,QACA,OACA,OACA,KACA,eAAaxD,QAAAN,EAAAA,EAAAA,GACVG,OAAO4D,KAAKhH,EAAS+B,KAAK,SAASC,OAAOC,YAAYkC,OAAQ8C,IAAQ,OAbrDC,EAaqED,KAZrB,IAA/DjH,EAAS+B,KAAK,SAASC,OAAOC,WAAWiF,GAAUC,SADpCD,UAgBhBE,EAAYhE,OAAAC,OAAA,CAChBgE,gBAA8B,QAAfT,EAAE7E,EAAK,gBAAQ,IAAA6E,OAAA,EAAbA,EAAeU,UAChCC,UAAwB,QAAfV,EAAE9E,EAAK,gBAAQ,IAAA8E,GAAQ,QAARC,EAAbD,EAAe7E,cAAM,IAAA8E,OAAR,EAAbA,EAAuB7F,OAC/Bc,GAGL,OAAOqB,OAAOuD,QAAQS,GACnBjD,OAAOqD,IAAA,IAAEP,GAAIO,EAAA,OAAMT,EAAY1C,SAAS4C,KACxCtD,KAAK,CAAC5C,EAAGC,KAAO,IAADyG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACd,MAAMC,EAAsB,QAAhBR,EAAG1F,EAAK,gBAAQ,IAAA0F,GAAQ,QAARC,EAAbD,EAAezF,cAAM,IAAA0F,GAAY,QAAZC,EAArBD,EAAuBzF,kBAAU,IAAA0F,GAAQ,QAARC,EAAjCD,EAAoC5G,EAAE,WAAG,IAAA6G,OAA5B,EAAbA,EAA2CM,MACpDC,EAAsB,QAAhBN,EAAG9F,EAAK,gBAAQ,IAAA8F,GAAQ,QAARC,EAAbD,EAAe7F,cAAM,IAAA8F,GAAY,QAAZC,EAArBD,EAAuB7F,kBAAU,IAAA8F,GAAQ,QAARC,EAAjCD,EAAoC/G,EAAE,WAAG,IAAAgH,OAA5B,EAAbA,EAA2CE,MAG1D,OAAID,GAAUE,GAAqB,IAAXF,GAA2B,IAAXE,EAC/BF,EAASE,EAIdF,GAAqB,IAAXA,GAAsB,EAEhCE,GAAqB,IAAXA,EAAqB,EAGpB,IAAXF,GAAiBE,EAEN,IAAXA,GAAiBF,EAGd,EAH6B,GAFC,IAOtCG,OAAO,CAACC,EAAGC,KAAA,IAAGrB,EAAKsB,GAAMD,EAAA,OAAAlF,OAAAC,OAAA,GAAWgF,EAAI,CAAC,CAACpB,GAAMsB,KAAU,CAAC,IAyH7BC,CAAgBxI,EAAS+B,OAAOmC,IAAIuE,IAAkC,IAAhCxB,EAAKsB,GAAqBE,EAC7E,GAAMF,EAAO,CACX,IAAIG,EACJ,IACGH,GACiB,iBAAVA,GAAuC,KAAjBA,EAAMI,QACnCC,MAAMC,QAAQN,IAA2B,IAAjBA,EAAMzF,QACb,iBAAVyF,GAAgC,OAAVA,GAAgD,IAA9BnF,OAAO4D,KAAKuB,GAAOzF,OAEnE,OAGF,GAAqB,iBAAVyF,EAAoB,CAAC,IAADO,EAE7BJ,EAtM1B,SAAgBK,GAGd,IADkB,0CACHC,KAAKD,GAAM,OAAO,EAEjC,MAAME,EAAO,IAAIC,KAAKH,GACtB,OAAQI,MAAMF,EAAKG,YAAcH,EAAKI,cAAcC,MAAM,EAAG,MAAQP,EAAIO,MAAM,EAAG,GACpF,CA8L8CC,CAAOhB,GACuC,QAAtCO,GAAGU,EAAAA,EAAAA,GAAc5J,EAAKuB,SAAUoH,UAAM,IAAAO,EAAAA,EAAI,IAAMP,CAC9E,MAAO,GAAIK,MAAMC,QAAQN,GAAQ,CAC/B,GAAY,WAARtB,GAA4B,WAARA,EACtB,OACGwC,IAAUlB,KACT7D,EAAAA,EAAAA,MAACgF,EAAAA,GAAQ,CAEPpE,UAAWqE,EACX7D,SAAU,EACV,kBAAiB,wBAAwBlB,SAAA,EAEzCC,EAAAA,EAAAA,KAAC+E,EAAAA,GAAS,CAACzD,GAAG,aAAYvB,SAAEjF,EAAE,aAC9BkF,EAAAA,EAAAA,KAAC+E,EAAAA,GAAS,CAACzD,GAAG,aAAYvB,SACvB2D,EAAMrE,IAAI,CAAC2F,EAAY1G,KACtB0B,EAAAA,EAAAA,KAAA,QAAAD,SACGiF,EAAM5I,MAAQ4I,EAAM5I,OAASkC,KAAQoF,aAAK,EAALA,EAAOzF,QAAS,EAAI,KAAO,IAAM+G,GAD9D1G,QARV8D,GAiBXyB,EAAiBH,EAAMrE,IAAK4F,GAAcA,EAAK7I,OAAO8I,KAAK,KAE/D,MACErB,EAD0B,iBAAVH,EACCyB,KAAKC,UAAU1B,GAEf2B,OAAO3B,GAG1B,OACE7D,EAAAA,EAAAA,MAACgF,EAAAA,GAAQ,CAEPpE,UAAWqE,EACX7D,SAAU,EACV,aAAetE,EAAQyF,GAAI,KAAKyB,EAAiB9D,SAAA,EAEjDC,EAAAA,EAAAA,KAAC+E,EAAAA,GAAS,CAAAhF,SAAEpD,EAAQyF,MACpBpC,EAAAA,EAAAA,KAAC+E,EAAAA,GAAS,CAAAhF,SAAE8D,MANPzB,EASX,IAGHvG,EAA2B0B,WAC1BF,EAA6BY,OAAS,GACtCZ,EAA6BgC,IAAI,CAACiG,EAAwBhH,KAAW,IAAAiH,EAAAC,EAAA,OACnE3F,EAAAA,EAAAA,MAACgF,EAAAA,GAAQ,CACPpE,UAAWqE,EAEX7D,SAAU,EACV,aAC2C,IAAzCqE,EAAkB7H,YAAYQ,OACvBzB,EAAS8I,EAAkB7I,OAAM,MACI,QADJ8I,EAClCD,EAAkB7H,YAAY,GAAGrB,aAAK,IAAAmJ,EAAAA,EACtCvL,EAAWsL,EAAkB7H,YAAY,GAAGgI,YAE3CjJ,EAAS8I,EAAkB7I,OAAM,KAAK3B,EAAE,aAAY,IACrDwK,EAAkB7H,YAAYQ,OAAM,IAClCnD,EAAE,eAAc,IAAIA,EAAE,kBAAiB,IAAI0B,EAC7C8I,EAAkB7I,OACnB,KAAK3B,EAAE,aAAY,IAAIwK,EAAkB7H,YACvC4B,IAAKvB,IAAe,IAAA4H,EAAA,OAAqB,QAArBA,EAAK5H,EAAW1B,aAAK,IAAAsJ,EAAAA,EAAI1L,EAAW8D,EAAW2H,aACnEP,KAAK,MACbnF,SAAA,EAEDC,EAAAA,EAAAA,KAAC+E,EAAAA,GAAS,CAAAhF,SAAEvD,EAAS8I,EAAkB7I,SAEtC6I,EAAkB7H,YAAYQ,OAAS,IACtC+B,EAAAA,EAAAA,KAAC+E,EAAAA,GAAS,CAAAhF,UACRC,EAAAA,EAAAA,KAAA,OAAKsB,GAAG,uBAAsBvB,SAC3BuF,EAAkB7H,YAAY4B,IAAI,CAACvB,EAAiBQ,KAAW,IAAAqH,EAAA,OAC9D3F,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,KAAM9C,EAAW2H,UAAWG,OAAO,QAAO7F,SAAA,IAC1B,QAD0B4F,EAC1C7H,EAAW1B,aAAK,IAAAuJ,EAAAA,EAAI3L,EAAW8D,EAAW2H,eAFxCnH,SASwB,IAAzCgH,EAAkB7H,YAAYQ,SAC7B+B,EAAAA,EAAAA,KAAC+E,EAAAA,GAAS,CAAAhF,UACRC,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,KAAM0E,EAAkB7H,YAAY,GAAGgI,UAAWG,OAAO,QAAO7F,SAAA,IAC1B,QAD0ByF,EAChEF,EAAkB7H,YAAY,GAAGrB,aAAK,IAAAoJ,EAAAA,EAAIxL,EAAWsL,EAAkB7H,YAAY,GAAGgI,kBAnC3FnH,KA0CVvC,EAAyBwB,WAAakC,EAAoBxB,OAAS,IAClE4B,EAAAA,EAAAA,MAACgF,EAAAA,GAAQ,CACPpE,UAAWqE,EACX7D,SAAU,EACV,kBAAgB,kCAAiClB,SAAA,EAEjDC,EAAAA,EAAAA,KAAC+E,EAAAA,GAAS,CAACzD,GAAG,kBAAiBvB,SAAEjF,EAAE,kBACnC+E,EAAAA,EAAAA,MAACkF,EAAAA,GAAS,CAAAhF,SAAA,EACRC,EAAAA,EAAAA,KAAA,OAAKsB,GAAG,kBAAiBvB,SACtBN,EAAoBJ,IACnB,CAACwG,EAAcvH,KAAW,IAAAwH,EAAAC,EAAA,OACxBF,EAAQzJ,QACN4D,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CACHC,KAAoC,KAAb,QAAjBkF,EAAAD,EAAQJ,iBAAS,IAAAK,OAAA,EAAjBA,EAAmB7H,QAAe4H,EAAQJ,UAAY,IAC5DG,OAAsC,KAAb,QAAjBG,EAAAF,EAAQJ,iBAAS,IAAAM,OAAA,EAAjBA,EAAmB9H,QAAe,QAAU,GAAG8B,SAEtD8F,EAAQzJ,SALHkC,QAWlB0B,EAAAA,EAAAA,KAAA,OAAKU,KAAK,SAAS,aAAY5F,EAAE,cAAe2F,UF7YlD,kDE6Y+EV,SAC1EJ,EAAuB,IACtBK,EAAAA,EAAAA,KAACgG,EAAAA,GAAU,CACTvE,WAAY,CACVnG,WAAYR,EAAE,cACdmL,aAAcnL,EAAE,iBAChBoL,SAAUpL,EAAE,aACZqL,KAAMrL,EAAE,SAEVsL,WAAYzG,EACZ/D,YAAaH,EACb4K,eAAiBF,GAAczK,EAAiByK,uBAYrEhL,EAASmL,YAAatG,EAAAA,EAAAA,KAACuG,EAAAA,EAAQ,CAACC,OAAQ,mBCjanD,MAHyCC,IAChCzG,EAAAA,EAAAA,KAAC3F,EAAqB,CAACQ,UAAW4L,EAAMC,OAAOpF,I,2CCJxD,UAAeqF,EAAU,O","sources":["webpack://product-website-template/./src/templates/wooItemDetailTemplate/WOOItemDetailTemplate.module.css","webpack://product-website-template/./src/services/getPDFName.ts","webpack://product-website-template/./src/templates/wooItemDetailTemplate/WOOItemDetailTemplate.tsx","webpack://product-website-template/./src/pages/[id]/detailPage.tsx","webpack://product-website-template/./src/pages/[id]/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var backLink = \"WOOItemDetailTemplate-module--backLink--e33aa\";\nexport var container = \"WOOItemDetailTemplate-module--container--ccf27\";\nexport var content = \"WOOItemDetailTemplate-module--content--29ced\";\nexport var heading1 = \"WOOItemDetailTemplate-module--heading1--ba754\";\nexport var pagination = \"WOOItemDetailTemplate-module--pagination--a7d7e\";\nexport var table = \"WOOItemDetailTemplate-module--table--d7844\";\nexport var tableBody = \"WOOItemDetailTemplate-module--tableBody--9d96b\";\nexport var tableRow = \"WOOItemDetailTemplate-module--tableRow--d28f2\";","export const getPDFName = (url: string) => {\r\n  if (!url) return;\r\n\r\n  const finalSlashIndex = url.lastIndexOf(\"/\");\r\n  const pdfName = url.substring(finalSlashIndex + 1);\r\n  return pdfName;\r\n};\r\n","import * as React from \"react\";\nimport * as styles from \"./WOOItemDetailTemplate.module.css\";\nimport _ from \"lodash\";\nimport Skeleton from \"react-loading-skeleton\";\nimport {\n  Page,\n  PageContent,\n  Heading1,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  UnorderedList,\n  UnorderedListItem,\n  Link,\n} from \"@utrecht/component-library-react/dist/css-module\";\nimport { translateDate } from \"../../services/dateFormat\";\nimport { useTranslation } from \"react-i18next\";\nimport { navigate } from \"gatsby\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { QueryClient } from \"react-query\";\nimport { useOpenWoo } from \"../../hooks/openWoo\";\nimport { getPDFName } from \"../../services/getPDFName\";\nimport { HorizontalOverflowWrapper, Pagination } from \"@conduction/components\";\nimport { removeHTMLFromString } from \"../../services/removeHTMLFromString\";\nimport { Helmet } from \"react-helmet\";\nimport { usePaginationContext } from \"../../context/pagination\";\n\ninterface WOOItemDetailTemplateProps {\n  wooItemId: string;\n}\n\nexport const WOOItemDetailTemplate: React.FC<WOOItemDetailTemplateProps> = ({ wooItemId }) => {\n  const { t, i18n } = useTranslation();\n\n  const queryClient = new QueryClient();\n  const getItems = useOpenWoo(queryClient).getOne(wooItemId);\n\n  const { pagination, setPagination } = usePaginationContext();\n  const [requestedPage, setRequestedPage] = React.useState<number>(pagination.currentPage);\n\n  const attachmentsWithLabelsQuery = useOpenWoo(queryClient).getAttachmentsWithLabels(wooItemId);\n  const attachmentsNoLabelsQuery = useOpenWoo(queryClient).getAttachmentsNoLabels(wooItemId, 10, requestedPage);\n\n  const sortAlphaNum = (a: any, b: any) => a.title.localeCompare(b.title, i18n.language, { numeric: true });\n\n  const getLabel = (label: string) => {\n    switch (_.upperFirst(label)) {\n      case \"Informatieverzoek\":\n        return t(\"Information request\");\n      case \"Convenant\":\n        return t(\"Convenant\");\n      case \"Besluit\":\n        return t(\"Decision\");\n      case \"Inventarisatielijst\":\n        return t(\"Inventory list\");\n      default:\n        return t(_.upperFirst(label));\n    }\n  };\n\n  const getName = (name: string) => {\n    const formattedName = name.replace(/_/g, \" \");\n\n    const upperFirstName = _.upperFirst(formattedName);\n\n    switch (upperFirstName) {\n      case \"Bevindingen\":\n        return t(\"Findings\");\n      case \"Conclusies\":\n        return t(\"Conclusions\");\n      case \"Functiebenaming\":\n        return t(\"Job title\");\n      case \"Gedraging\":\n        return t(\"Behavior\");\n      case \"Onderdeel taak\":\n        return t(\"Part of task\");\n      case \"Oordeel\":\n        return t(\"Judgement\");\n      case \"Opdrachtgever\":\n        return t(\"Client\");\n      case \"Organisatieonderdeel\":\n        return t(\"Organizational unit\");\n      default:\n        return t(getItems.data[\"@self\"].schema.properties[name]?.title ?? upperFirstName);\n    }\n  };\n\n  function isDate(str: string): boolean {\n    // Check for ISO date format (YYYY-MM-DD) or common date formats\n    const dateRegex = /^\\d{4}-\\d{2}-\\d{2}|^\\d{4}\\/\\d{2}\\/\\d{2}/;\n    if (!dateRegex.test(str)) return false;\n\n    const date = new Date(str);\n    return !isNaN(date.getTime()) && date.toISOString().slice(0, 10) === str.slice(0, 10);\n  }\n\n  const getExtension = (attachment: any) => {\n    if (attachment.extension) {\n      return attachment.extension;\n    } else {\n      return attachment.type.split(\"/\").pop();\n    }\n  };\n\n  const checkIfVisible = (property: any) => {\n    return getItems.data[\"@self\"].schema.properties[property].visible !== false;\n  };\n\n  const orderProperties = (data: any) => {\n    const excludeKeys = [\n      \"@self\",\n      \"title\",\n      \"titel\",\n      \"name\",\n      \"naam\",\n      \"id\",\n      \"attachments\",\n      ...Object.keys(getItems.data[\"@self\"].schema.properties).filter((key) => !checkIfVisible(key)),\n    ];\n\n    const enrichedData = {\n      publicatiedatum: data[\"@self\"]?.published,\n      categorie: data[\"@self\"]?.schema?.title,\n      ...data,\n    };\n\n    return Object.entries(enrichedData)\n      .filter(([key]) => !excludeKeys.includes(key))\n      .sort((a, b) => {\n        const orderA = data[\"@self\"]?.schema?.properties?.[a[0]]?.order;\n        const orderB = data[\"@self\"]?.schema?.properties?.[b[0]]?.order;\n\n        // If both have valid non-zero orders, sort normally\n        if (orderA && orderB && orderA !== 0 && orderB !== 0) {\n          return orderA - orderB;\n        }\n\n        // If orderA is valid and non-zero, it comes first\n        if (orderA && orderA !== 0) return -1;\n        // If orderB is valid and non-zero, it comes first\n        if (orderB && orderB !== 0) return 1;\n\n        // If orderA is 0 and orderB is null/undefined, orderA comes first\n        if (orderA === 0 && !orderB) return -1;\n        // If orderB is 0 and orderA is null/undefined, orderB comes first\n        if (orderB === 0 && !orderA) return 1;\n\n        // If both are 0 or both are null/undefined, maintain original order\n        return 0;\n      })\n      .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n  };\n\n  const groupedAttachmentsWithLabels = React.useMemo(() => {\n    if (!attachmentsWithLabelsQuery.isSuccess || !attachmentsWithLabelsQuery.data?.results) return [];\n\n    const attachments = attachmentsWithLabelsQuery.data.results;\n\n    let multipleLabels: any[] = [];\n    let singleLabels: any[] = [];\n    let allLabels: any[] = [];\n\n    attachments.forEach((attachment: any) => {\n      if (attachment.labels?.length > 1) {\n        multipleLabels.push(attachment);\n        allLabels.push(...attachment.labels);\n      } else {\n        singleLabels.push(attachment);\n        allLabels.push(attachment.labels[0]);\n      }\n    });\n\n    const newAttachments: any[] = [];\n    multipleLabels.forEach((attachment: any) => {\n      attachment.labels.forEach((label: any, idx: number) => {\n        newAttachments.push({ ...attachment, labels: [attachment.labels[idx]] });\n      });\n    });\n\n    const attachmentsAll = [...newAttachments, ...singleLabels];\n    const uniqueLabels = [...new Set(allLabels)];\n\n    // Define the specific order for labels\n    const labelOrder = [\"informatieverzoek\", \"convenant\", \"besluit\", \"inventarisatielijst\", \"bijlage\"];\n\n    // Sort labels according to the specified order, with any unknown labels at the end\n    const sortedLabels = uniqueLabels.sort((a: any, b: any) => {\n      const aLower = a.toLowerCase();\n      const bLower = b.toLowerCase();\n      const indexA = labelOrder.indexOf(aLower);\n      const indexB = labelOrder.indexOf(bLower);\n\n      // If both labels are in the order array, sort by their position\n      if (indexA !== -1 && indexB !== -1) {\n        return indexA - indexB;\n      }\n\n      // If only one is in the order array, prioritize it\n      if (indexA !== -1) return -1;\n      if (indexB !== -1) return 1;\n\n      // If neither is in the order array, sort alphanumerically\n      return aLower.localeCompare(bLower, i18n.language, { numeric: true });\n    });\n\n    return sortedLabels.map((label: any) => ({\n      attachments: attachmentsAll.filter((att: any) => att.labels.includes(label)),\n      label,\n    }));\n  }, [attachmentsWithLabelsQuery.data]);\n\n  const unsortedAttachments = React.useMemo(() => {\n    if (!attachmentsNoLabelsQuery.isSuccess || !attachmentsNoLabelsQuery.data?.results) return [];\n    return [...attachmentsNoLabelsQuery.data.results].sort(sortAlphaNum);\n  }, [attachmentsNoLabelsQuery.data]);\n\n  const totalAttachmentPages =\n    attachmentsNoLabelsQuery.isSuccess && attachmentsNoLabelsQuery.data?.pages\n      ? attachmentsNoLabelsQuery.data.pages\n      : pagination.currentPage;\n\n  React.useEffect(() => {\n    if (attachmentsNoLabelsQuery.isSuccess && pagination.currentPage !== requestedPage) {\n      setPagination({ currentPage: requestedPage });\n    }\n  }, [attachmentsNoLabelsQuery.isSuccess]);\n\n  return (\n    <>\n      {getItems.isSuccess && (\n        <Helmet>\n          <title>{`Woo | ${window.sessionStorage.getItem(\"ORGANISATION_NAME\")} | ${removeHTMLFromString(\n            getItems.data.titel,\n          )}`}</title>\n        </Helmet>\n      )}\n      <Page>\n        <PageContent className={styles.container}>\n          <div role=\"navigation\">\n            <Link\n              className={styles.backLink}\n              href=\"/\"\n              onClick={(e: any) => {\n                e.preventDefault(), navigate(\"/\");\n              }}\n              tabIndex={0}\n              aria-label={t(\"Back to homepage\")}\n            >\n              <FontAwesomeIcon icon={faArrowLeft} /> <span>{t(\"Back to homepage\")}</span>\n            </Link>\n          </div>\n\n          {getItems.isSuccess && getItems.data && (\n            <div className={styles.content} role=\"region\" aria-label={t(\"Details\")}>\n              <Heading1\n                id=\"mainContent\"\n                tabIndex={0}\n                aria-label={`${t(\"Title of woo request\")}, ${getItems.data.title ?? getItems.data.titel ?? getItems.data.name ?? getItems.data.naam ?? getItems.data.id}`}\n              >\n                {removeHTMLFromString(removeHTMLFromString(getItems.data.titel ?? getItems.data.title))}\n              </Heading1>\n\n              <HorizontalOverflowWrapper\n                ariaLabels={{\n                  scrollLeftButton: t(\"Scroll table to the left\"),\n                  scrollRightButton: t(\"Scroll table to the right\"),\n                }}\n              >\n                <Table className={styles.table}>\n                  <TableBody className={styles.tableBody}>\n                    {getItems.data &&\n                      Object.entries(orderProperties(getItems.data)).map(([key, value]: [string, any]) => {\n                        if (!!value) {\n                          let formattedValue: string;\n                          if (\n                            !value ||\n                            (typeof value === \"string\" && value.trim() === \"\") ||\n                            (Array.isArray(value) && value.length === 0) ||\n                            (typeof value === \"object\" && value !== null && Object.keys(value).length === 0)\n                          ) {\n                            return;\n                          }\n\n                          if (typeof value === \"string\") {\n                            const isValidDate = isDate(value);\n                            formattedValue = isValidDate ? translateDate(i18n.language, value) ?? \"-\" : value;\n                          } else if (Array.isArray(value)) {\n                            if (key === \"themes\" || key === \"themas\") {\n                              return (\n                                !_.isEmpty(value) && (\n                                  <TableRow\n                                    key={key}\n                                    className={styles.tableRow}\n                                    tabIndex={0}\n                                    aria-labelledby={\"themesName themesData\"}\n                                  >\n                                    <TableCell id=\"themesName\">{t(\"Themes\")}</TableCell>\n                                    <TableCell id=\"themesData\">\n                                      {value.map((theme: any, idx: number) => (\n                                        <span key={idx}>\n                                          {theme.title ? theme.title + (idx !== value?.length - 1 ? \", \" : \"\") : theme}\n                                        </span>\n                                      ))}\n                                    </TableCell>\n                                  </TableRow>\n                                )\n                              );\n                            } else {\n                              formattedValue = value.map((item: any) => item.title).join(\", \");\n                            }\n                          } else if (typeof value === \"object\") {\n                            formattedValue = JSON.stringify(value);\n                          } else {\n                            formattedValue = String(value);\n                          }\n\n                          return (\n                            <TableRow\n                              key={key}\n                              className={styles.tableRow}\n                              tabIndex={0}\n                              aria-label={`${getName(key)}, ${formattedValue}`}\n                            >\n                              <TableCell>{getName(key)}</TableCell>\n                              <TableCell>{formattedValue}</TableCell>\n                            </TableRow>\n                          );\n                        }\n                      })}\n\n                    {attachmentsWithLabelsQuery.isSuccess &&\n                      groupedAttachmentsWithLabels.length > 0 &&\n                      groupedAttachmentsWithLabels.map((sortedAttachments: any, idx: number) => (\n                        <TableRow\n                          className={styles.tableRow}\n                          key={idx}\n                          tabIndex={0}\n                          aria-label={\n                            sortedAttachments.attachments.length === 1\n                              ? `${getLabel(sortedAttachments.label)}, ${\n                                  sortedAttachments.attachments[0].title ??\n                                  getPDFName(sortedAttachments.attachments[0].accessUrl)\n                                }`\n                              : `${getLabel(sortedAttachments.label)}, ${t(\"There are\")} ${\n                                  sortedAttachments.attachments.length\n                                } ${t(\"Attachments\")} ${t(\"With the label\")} ${getLabel(\n                                  sortedAttachments.label,\n                                )}, ${t(\"These are\")} ${sortedAttachments.attachments\n                                  .map((attachment: any) => attachment.title ?? getPDFName(attachment.accessUrl))\n                                  .join(\", \")}`\n                          }\n                        >\n                          <TableCell>{getLabel(sortedAttachments.label)}</TableCell>\n\n                          {sortedAttachments.attachments.length > 1 && (\n                            <TableCell>\n                              <div id=\"labelAttachmentsData\">\n                                {sortedAttachments.attachments.map((attachment: any, idx: number) => (\n                                  <div key={idx}>\n                                    <Link href={attachment.accessUrl} target=\"blank\">\n                                      {`${attachment.title ?? getPDFName(attachment.accessUrl)}`}\n                                    </Link>\n                                  </div>\n                                ))}\n                              </div>\n                            </TableCell>\n                          )}\n                          {sortedAttachments.attachments.length === 1 && (\n                            <TableCell>\n                              <Link href={sortedAttachments.attachments[0].accessUrl} target=\"blank\">\n                                {`${sortedAttachments.attachments[0].title ?? getPDFName(sortedAttachments.attachments[0].accessUrl)}`}\n                              </Link>\n                            </TableCell>\n                          )}\n                        </TableRow>\n                      ))}\n\n                    {attachmentsNoLabelsQuery.isSuccess && unsortedAttachments.length > 0 && (\n                      <TableRow\n                        className={styles.tableRow}\n                        tabIndex={0}\n                        aria-labelledby=\"attachmentsName attachmentsData\"\n                      >\n                        <TableCell id=\"attachmentsName\">{t(\"Attachments\")}</TableCell>\n                        <TableCell>\n                          <div id=\"attachmentsData\">\n                            {unsortedAttachments.map(\n                              (bijlage: any, idx: number) =>\n                                bijlage.title && (\n                                  <div key={idx}>\n                                    <Link\n                                      href={bijlage.accessUrl?.length !== 0 ? bijlage.accessUrl : \"#\"}\n                                      target={bijlage.accessUrl?.length !== 0 ? \"blank\" : \"\"}\n                                    >\n                                      {bijlage.title}\n                                    </Link>\n                                  </div>\n                                ),\n                            )}\n                          </div>\n                          <div role=\"region\" aria-label={t(\"Pagination\")} className={styles.pagination}>\n                            {totalAttachmentPages > 1 && (\n                              <Pagination\n                                ariaLabels={{\n                                  pagination: t(\"Pagination\"),\n                                  previousPage: t(\"Previous page\"),\n                                  nextPage: t(\"Next page\"),\n                                  page: t(\"Page\"),\n                                }}\n                                totalPages={totalAttachmentPages}\n                                currentPage={requestedPage}\n                                setCurrentPage={(page: any) => setRequestedPage(page)}\n                              />\n                            )}\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </HorizontalOverflowWrapper>\n            </div>\n          )}\n          {getItems.isLoading && <Skeleton height={\"200px\"} />}\n        </PageContent>\n      </Page>\n    </>\n  );\n};\n","import * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { PageProps } from \"gatsby\";\r\nimport { WOOItemDetailTemplate } from \"../../templates/wooItemDetailTemplate/WOOItemDetailTemplate\";\r\n\r\nconst DetailPage: React.FC<PageProps> = (props: PageProps) => {\r\n  return <WOOItemDetailTemplate wooItemId={props.params.id} />;\r\n};\r\nexport default DetailPage;\r\n","import DetailPage from \"./detailPage\";\r\n\r\nexport default DetailPage;\r\n"],"names":["tableRow","getPDFName","url","finalSlashIndex","lastIndexOf","substring","WOOItemDetailTemplate","_ref","_attachmentsNoLabelsQ2","_ref4","_ref5","_ref6","_getItems$data$title","_getItems$data$titel","wooItemId","t","i18n","useTranslation","queryClient","QueryClient","getItems","useOpenWoo","getOne","pagination","setPagination","usePaginationContext","requestedPage","setRequestedPage","React","currentPage","attachmentsWithLabelsQuery","getAttachmentsWithLabels","attachmentsNoLabelsQuery","getAttachmentsNoLabels","sortAlphaNum","a","b","title","localeCompare","language","numeric","getLabel","label","_upperFirst","getName","name","_getItems$data$Self$","_getItems$data$Self$2","formattedName","replace","upperFirstName","data","schema","properties","groupedAttachmentsWithLabels","_attachmentsWithLabel","isSuccess","results","attachments","multipleLabels","singleLabels","allLabels","forEach","attachment","_attachment$labels","labels","length","push","apply","_toConsumableArray","newAttachments","idx","Object","assign","attachmentsAll","concat","uniqueLabels","Set","labelOrder","sort","aLower","toLowerCase","bLower","indexA","indexOf","indexB","map","filter","att","includes","unsortedAttachments","_attachmentsNoLabelsQ","totalAttachmentPages","pages","_jsxs","_Fragment","children","_jsx","Helmet","window","sessionStorage","getItem","removeHTMLFromString","titel","Page","PageContent","className","role","Link","href","onClick","e","preventDefault","navigate","tabIndex","FontAwesomeIcon","icon","faArrowLeft","Heading1","id","naam","HorizontalOverflowWrapper","ariaLabels","scrollLeftButton","scrollRightButton","Table","TableBody","entries","_data$Self","_data$Self2","_data$Self2$schema","excludeKeys","keys","key","property","visible","enrichedData","publicatiedatum","published","categorie","_ref2","_data$Self3","_data$Self3$schema","_data$Self3$schema$pr","_data$Self3$schema$pr2","_data$Self4","_data$Self4$schema","_data$Self4$schema$pr","_data$Self4$schema$pr2","orderA","order","orderB","reduce","acc","_ref3","value","orderProperties","_ref7","formattedValue","trim","Array","isArray","_translateDate","str","test","date","Date","isNaN","getTime","toISOString","slice","isDate","translateDate","_isEmpty","TableRow","styles","TableCell","theme","item","join","JSON","stringify","String","sortedAttachments","_sortedAttachments$at","_sortedAttachments$at2","accessUrl","_attachment$title","_attachment$title2","target","bijlage","_bijlage$accessUrl","_bijlage$accessUrl2","Pagination","previousPage","nextPage","page","totalPages","setCurrentPage","isLoading","Skeleton","height","props","params","DetailPage"],"sourceRoot":""}