{"version":3,"file":"component---src-pages-[id]-detail-page-tsx-f9f43efcfc79603412ff.js","mappings":"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","sources":["webpack://product-website-template/./src/templates/wooItemDetailTemplate/WOOItemDetailTemplate.module.css","webpack://product-website-template/./src/services/getPDFName.ts","webpack://product-website-template/./src/templates/wooItemDetailTemplate/WOOItemDetailTemplate.tsx","webpack://product-website-template/./src/pages/[id]/detailPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var backLink = \"WOOItemDetailTemplate-module--backLink--e33aa\";\nexport var container = \"WOOItemDetailTemplate-module--container--ccf27\";\nexport var content = \"WOOItemDetailTemplate-module--content--29ced\";\nexport var heading1 = \"WOOItemDetailTemplate-module--heading1--ba754\";\nexport var pagination = \"WOOItemDetailTemplate-module--pagination--a7d7e\";\nexport var table = \"WOOItemDetailTemplate-module--table--d7844\";\nexport var tableBody = \"WOOItemDetailTemplate-module--tableBody--9d96b\";\nexport var tableRow = \"WOOItemDetailTemplate-module--tableRow--d28f2\";","export const getPDFName = (url: string) => {\r\n  if (!url) return;\r\n\r\n  const finalSlashIndex = url.lastIndexOf(\"/\");\r\n  const pdfName = url.substring(finalSlashIndex + 1);\r\n  return pdfName;\r\n};\r\n","import * as React from \"react\";\nimport * as styles from \"./WOOItemDetailTemplate.module.css\";\nimport _ from \"lodash\";\nimport Skeleton from \"react-loading-skeleton\";\nimport {\n  Page,\n  PageContent,\n  Heading1,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  UnorderedList,\n  UnorderedListItem,\n  Link,\n} from \"@utrecht/component-library-react/dist/css-module\";\nimport { translateDate } from \"../../services/dateFormat\";\nimport { useTranslation } from \"react-i18next\";\nimport { navigate } from \"gatsby\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { QueryClient } from \"react-query\";\nimport { useOpenWoo } from \"../../hooks/openWoo\";\nimport { getPDFName } from \"../../services/getPDFName\";\nimport { HorizontalOverflowWrapper, Pagination } from \"@conduction/components\";\nimport { removeHTMLFromString } from \"../../services/removeHTMLFromString\";\nimport { Helmet } from \"react-helmet\";\nimport { usePaginationContext } from \"../../context/pagination\";\n\ninterface WOOItemDetailTemplateProps {\n  wooItemId: string;\n}\n\nexport const WOOItemDetailTemplate: React.FC<WOOItemDetailTemplateProps> = ({ wooItemId }) => {\n  const { t, i18n } = useTranslation();\n\n  const queryClient = new QueryClient();\n  const getItems = useOpenWoo(queryClient).getOne(wooItemId);\n\n  const { pagination, setPagination } = usePaginationContext();\n  const [requestedPage, setRequestedPage] = React.useState<number>(pagination.currentPage);\n\n  const attachmentsWithLabelsQuery = useOpenWoo(queryClient).getAttachmentsWithLabels(wooItemId);\n  const attachmentsNoLabelsQuery = useOpenWoo(queryClient).getAttachmentsNoLabels(wooItemId, 10, requestedPage);\n\n  const sortAlphaNum = (a: any, b: any) => a.title.localeCompare(b.title, i18n.language, { numeric: true });\n\n  const getLabel = (label: string) => {\n    switch (_.upperFirst(label)) {\n      case \"Informatieverzoek\":\n        return t(\"Information request\");\n      case \"Convenant\":\n        return t(\"Convenant\");\n      case \"Besluit\":\n        return t(\"Decision\");\n      case \"Inventarisatielijst\":\n        return t(\"Inventory list\");\n      default:\n        return t(_.upperFirst(label));\n    }\n  };\n\n  const getName = (name: string) => {\n    const formattedName = name.replace(/_/g, \" \");\n\n    const upperFirstName = _.upperFirst(formattedName);\n\n    switch (upperFirstName) {\n      case \"Bevindingen\":\n        return t(\"Findings\");\n      case \"Conclusies\":\n        return t(\"Conclusions\");\n      case \"Functiebenaming\":\n        return t(\"Job title\");\n      case \"Gedraging\":\n        return t(\"Behavior\");\n      case \"Onderdeel taak\":\n        return t(\"Part of task\");\n      case \"Oordeel\":\n        return t(\"Judgement\");\n      case \"Opdrachtgever\":\n        return t(\"Client\");\n      case \"Organisatieonderdeel\":\n        return t(\"Organizational unit\");\n      default:\n        return t(getItems.data[\"@self\"].schema.properties[name]?.title ?? upperFirstName);\n    }\n  };\n\n  function isDate(str: string): boolean {\n    // Check for ISO date format (YYYY-MM-DD) or common date formats\n    const dateRegex = /^\\d{4}-\\d{2}-\\d{2}|^\\d{4}\\/\\d{2}\\/\\d{2}/;\n    if (!dateRegex.test(str)) return false;\n\n    const date = new Date(str);\n    return !isNaN(date.getTime()) && date.toISOString().slice(0, 10) === str.slice(0, 10);\n  }\n\n  const getExtension = (attachment: any) => {\n    if (attachment.extension) {\n      return attachment.extension;\n    } else {\n      return attachment.type.split(\"/\").pop();\n    }\n  };\n\n  const checkIfVisible = (property: any) => {\n    return getItems.data[\"@self\"].schema.properties[property].visible !== false;\n  };\n\n  const orderProperties = (data: any) => {\n    const excludeKeys = [\n      \"@self\",\n      \"title\",\n      \"titel\",\n      \"name\",\n      \"naam\",\n      \"id\",\n      ...Object.keys(getItems.data[\"@self\"].schema.properties).filter((key) => !checkIfVisible(key)),\n    ];\n\n    const enrichedData = {\n      publicatieDatum: data[\"@self\"]?.published,\n      categorie: data[\"@self\"]?.schema?.title,\n      ...data,\n    };\n\n    return Object.entries(enrichedData)\n      .filter(([key]) => !excludeKeys.includes(key))\n      .sort((a, b) => {\n        const orderA = data[\"@self\"]?.schema?.properties?.[a[0]]?.order;\n        const orderB = data[\"@self\"]?.schema?.properties?.[b[0]]?.order;\n\n        // If both have valid non-zero orders, sort normally\n        if (orderA && orderB && orderA !== 0 && orderB !== 0) {\n          return orderA - orderB;\n        }\n\n        // If orderA is valid and non-zero, it comes first\n        if (orderA && orderA !== 0) return -1;\n        // If orderB is valid and non-zero, it comes first\n        if (orderB && orderB !== 0) return 1;\n\n        // If orderA is 0 and orderB is null/undefined, orderA comes first\n        if (orderA === 0 && !orderB) return -1;\n        // If orderB is 0 and orderA is null/undefined, orderB comes first\n        if (orderB === 0 && !orderA) return 1;\n\n        // If both are 0 or both are null/undefined, maintain original order\n        return 0;\n      })\n      .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\n  };\n\n  const groupedAttachmentsWithLabels = React.useMemo(() => {\n    if (!attachmentsWithLabelsQuery.isSuccess || !attachmentsWithLabelsQuery.data?.results) return [];\n\n    const attachments = attachmentsWithLabelsQuery.data.results;\n\n    let multipleLabels: any[] = [];\n    let singleLabels: any[] = [];\n    let allLabels: any[] = [];\n\n    attachments.forEach((attachment: any) => {\n      if (attachment.labels?.length > 1) {\n        multipleLabels.push(attachment);\n        allLabels.push(...attachment.labels);\n      } else {\n        singleLabels.push(attachment);\n        allLabels.push(attachment.labels[0]);\n      }\n    });\n\n    const newAttachments: any[] = [];\n    multipleLabels.forEach((attachment: any) => {\n      attachment.labels.forEach((label: any, idx: number) => {\n        newAttachments.push({ ...attachment, labels: [attachment.labels[idx]] });\n      });\n    });\n\n    const attachmentsAll = [...newAttachments, ...singleLabels];\n    const uniqueLabels = [...new Set(allLabels)];\n\n    return uniqueLabels.map((label: any) => ({\n      attachments: attachmentsAll.filter((att: any) => att.labels.includes(label)),\n      label,\n    }));\n  }, [attachmentsWithLabelsQuery.data]);\n\n  const unsortedAttachments = React.useMemo(() => {\n    if (!attachmentsNoLabelsQuery.isSuccess || !attachmentsNoLabelsQuery.data?.results) return [];\n    return [...attachmentsNoLabelsQuery.data.results].sort(sortAlphaNum);\n  }, [attachmentsNoLabelsQuery.data]);\n\n  const totalAttachmentPages =\n    attachmentsNoLabelsQuery.isSuccess && attachmentsNoLabelsQuery.data?.pages\n      ? attachmentsNoLabelsQuery.data.pages\n      : pagination.currentPage;\n\n  React.useEffect(() => {\n    if (attachmentsNoLabelsQuery.isSuccess && pagination.currentPage !== requestedPage) {\n      setPagination({ currentPage: requestedPage });\n    }\n  }, [attachmentsNoLabelsQuery.isSuccess]);\n\n  return (\n    <>\n      {getItems.isSuccess && (\n        <Helmet>\n          <title>{`Woo | ${window.sessionStorage.getItem(\"ORGANISATION_NAME\")} | ${removeHTMLFromString(\n            getItems.data.titel,\n          )}`}</title>\n        </Helmet>\n      )}\n      <Page>\n        <PageContent className={styles.container}>\n          <div role=\"navigation\">\n            <Link\n              className={styles.backLink}\n              href=\"/\"\n              onClick={(e: any) => {\n                e.preventDefault(), navigate(\"/\");\n              }}\n              tabIndex={0}\n              aria-label={t(\"Back to homepage\")}\n            >\n              <FontAwesomeIcon icon={faArrowLeft} /> <span>{t(\"Back to homepage\")}</span>\n            </Link>\n          </div>\n\n          {getItems.isSuccess && getItems.data && (\n            <div className={styles.content} role=\"region\" aria-label={t(\"Details\")}>\n              <Heading1\n                id=\"mainContent\"\n                tabIndex={0}\n                aria-label={`${t(\"Title of woo request\")}, ${getItems.data.title ?? getItems.data.titel ?? getItems.data.name ?? getItems.data.naam ?? getItems.data.id}`}\n              >\n                {removeHTMLFromString(removeHTMLFromString(getItems.data.titel ?? getItems.data.title))}\n              </Heading1>\n\n              <HorizontalOverflowWrapper\n                ariaLabels={{\n                  scrollLeftButton: t(\"Scroll table to the left\"),\n                  scrollRightButton: t(\"Scroll table to the right\"),\n                }}\n              >\n                <Table className={styles.table}>\n                  <TableBody className={styles.tableBody}>\n                    {getItems.data &&\n                      Object.entries(orderProperties(getItems.data)).map(([key, value]: [string, any]) => {\n                        if (!!value) {\n                          let formattedValue: string;\n                          if (\n                            !value ||\n                            (typeof value === \"string\" && value.trim() === \"\") ||\n                            (Array.isArray(value) && value.length === 0) ||\n                            (typeof value === \"object\" && value !== null && Object.keys(value).length === 0)\n                          ) {\n                            return;\n                          }\n\n                          if (typeof value === \"string\") {\n                            const isValidDate = isDate(value);\n                            formattedValue = isValidDate ? translateDate(i18n.language, value) ?? \"-\" : value;\n                          } else if (Array.isArray(value)) {\n                            if (key === \"themes\" || key === \"themas\") {\n                              return (\n                                !_.isEmpty(value) && (\n                                  <TableRow\n                                    key={key}\n                                    className={styles.tableRow}\n                                    tabIndex={0}\n                                    aria-labelledby={\"themesName themesData\"}\n                                  >\n                                    <TableCell id=\"themesName\">{t(\"Themes\")}</TableCell>\n                                    <TableCell id=\"themesData\">\n                                      {value.map((theme: any, idx: number) => (\n                                        <span key={idx}>\n                                          {theme.title ? theme.title + (idx !== value?.length - 1 ? \", \" : \"\") : theme}\n                                        </span>\n                                      ))}\n                                    </TableCell>\n                                  </TableRow>\n                                )\n                              );\n                            } else {\n                              formattedValue = value.map((item: any) => item.title).join(\", \");\n                            }\n                          } else if (typeof value === \"object\") {\n                            formattedValue = JSON.stringify(value);\n                          } else {\n                            formattedValue = String(value);\n                          }\n\n                          return (\n                            <TableRow\n                              key={key}\n                              className={styles.tableRow}\n                              tabIndex={0}\n                              aria-label={`${getName(key)}, ${formattedValue}`}\n                            >\n                              <TableCell>{getName(key)}</TableCell>\n                              <TableCell>{formattedValue}</TableCell>\n                            </TableRow>\n                          );\n                        }\n                      })}\n\n                    {attachmentsWithLabelsQuery.isSuccess &&\n                      groupedAttachmentsWithLabels.length > 0 &&\n                      groupedAttachmentsWithLabels.map((sortedAttachments: any, idx: number) => (\n                        <TableRow\n                          className={styles.tableRow}\n                          key={idx}\n                          tabIndex={0}\n                          aria-label={\n                            sortedAttachments.attachments.length === 1\n                              ? `${getLabel(sortedAttachments.label)}, ${sortedAttachments.attachments[0].title ??\n                              getPDFName(sortedAttachments.attachments[0].accessUrl)\n                              }`\n                              : `${getLabel(sortedAttachments.label)}, ${t(\"There are\")} ${sortedAttachments.attachments.length\n                              } ${t(\"Attachments\")} ${t(\"With the label\")} ${getLabel(\n                                sortedAttachments.label,\n                              )}, ${t(\"These are\")} ${sortedAttachments.attachments\n                                .map((attachment: any) => attachment.title ?? getPDFName(attachment.accessUrl))\n                                .join(\", \")}`\n                          }\n                        >\n                          <TableCell>{getLabel(sortedAttachments.label)}</TableCell>\n\n                          {sortedAttachments.attachments.length > 1 && (\n                            <TableCell>\n                              <UnorderedList id=\"labelAttachmentsData\">\n                                {sortedAttachments.attachments.map((attachment: any, idx: number) => (\n                                  <UnorderedListItem key={idx}>\n                                    <Link href={attachment.accessUrl} target=\"blank\">\n                                      {`${attachment.title ?? getPDFName(attachment.accessUrl)}`}\n                                    </Link>\n                                  </UnorderedListItem>\n                                ))}\n                              </UnorderedList>\n                            </TableCell>\n                          )}\n                          {sortedAttachments.attachments.length === 1 && (\n                            <TableCell>\n                              <Link href={sortedAttachments.attachments[0].accessUrl} target=\"blank\">\n                                {`${sortedAttachments.attachments[0].title ?? getPDFName(sortedAttachments.attachments[0].accessUrl)}`}\n                              </Link>\n                            </TableCell>\n                          )}\n                        </TableRow>\n                      ))}\n\n                    {attachmentsNoLabelsQuery.isSuccess && unsortedAttachments.length > 0 && (\n                      <TableRow\n                        className={styles.tableRow}\n                        tabIndex={0}\n                        aria-labelledby=\"attachmentsName attachmentsData\"\n                      >\n                        <TableCell id=\"attachmentsName\">{t(\"Attachments\")}</TableCell>\n                        <TableCell>\n                          <UnorderedList id=\"attachmentsData\">\n                            {unsortedAttachments.map(\n                              (bijlage: any, idx: number) =>\n                                bijlage.title && (\n                                  <UnorderedListItem key={idx}>\n                                    <Link\n                                      href={bijlage.accessUrl?.length !== 0 ? bijlage.accessUrl : \"#\"}\n                                      target={bijlage.accessUrl?.length !== 0 ? \"blank\" : \"\"}\n                                    >\n                                      {bijlage.title}\n                                    </Link>\n                                  </UnorderedListItem>\n                                ),\n                            )}\n                          </UnorderedList>\n                          <div role=\"region\" aria-label={t(\"Pagination\")}\n                            className={styles.pagination}\n                          >\n                            {totalAttachmentPages > 1 && (\n                              <Pagination\n                                ariaLabels={{\n                                  pagination: t(\"Pagination\"),\n                                  previousPage: t(\"Previous page\"),\n                                  nextPage: t(\"Next page\"),\n                                  page: t(\"Page\"),\n                                }}\n                                totalPages={totalAttachmentPages}\n                                currentPage={requestedPage}\n                                setCurrentPage={(page: any) => setRequestedPage(page)}\n                              />\n                            )}\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </HorizontalOverflowWrapper>\n            </div>\n          )}\n          {getItems.isLoading && <Skeleton height={\"200px\"} />}\n        </PageContent>\n      </Page>\n    </>\n  );\n};\n","import * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { PageProps } from \"gatsby\";\r\nimport { WOOItemDetailTemplate } from \"../../templates/wooItemDetailTemplate/WOOItemDetailTemplate\";\r\n\r\nconst DetailPage: React.FC<PageProps> = (props: PageProps) => {\r\n  return <WOOItemDetailTemplate wooItemId={props.params.id} />;\r\n};\r\nexport default DetailPage;\r\n"],"names":["tableRow","getPDFName","url","finalSlashIndex","lastIndexOf","substring","WOOItemDetailTemplate","_ref","_attachmentsNoLabelsQ2","_ref4","_ref5","_ref6","_getItems$data$title","_getItems$data$titel","wooItemId","t","i18n","useTranslation","queryClient","QueryClient","getItems","useOpenWoo","getOne","pagination","setPagination","usePaginationContext","requestedPage","setRequestedPage","React","currentPage","attachmentsWithLabelsQuery","getAttachmentsWithLabels","attachmentsNoLabelsQuery","getAttachmentsNoLabels","sortAlphaNum","a","b","title","localeCompare","language","numeric","getLabel","label","_upperFirst","getName","name","_getItems$data$Self$","_getItems$data$Self$2","formattedName","replace","upperFirstName","data","schema","properties","groupedAttachmentsWithLabels","_attachmentsWithLabel","isSuccess","results","attachments","multipleLabels","singleLabels","allLabels","forEach","attachment","_attachment$labels","labels","length","push","apply","_toConsumableArray","newAttachments","idx","attachmentsAll","concat","Set","map","filter","att","includes","unsortedAttachments","_attachmentsNoLabelsQ","sort","totalAttachmentPages","pages","_jsxs","_Fragment","children","_jsx","Helmet","window","sessionStorage","getItem","removeHTMLFromString","titel","Page","PageContent","className","role","Link","href","onClick","e","preventDefault","navigate","tabIndex","FontAwesomeIcon","icon","faArrowLeft","Heading1","id","naam","HorizontalOverflowWrapper","ariaLabels","scrollLeftButton","scrollRightButton","Table","TableBody","Object","entries","_data$Self","_data$Self2","_data$Self2$schema","excludeKeys","keys","key","property","visible","enrichedData","publicatieDatum","published","categorie","_ref2","_data$Self3","_data$Self3$schema","_data$Self3$schema$pr","_data$Self3$schema$pr2","_data$Self4","_data$Self4$schema","_data$Self4$schema$pr","_data$Self4$schema$pr2","orderA","order","orderB","reduce","acc","_ref3","value","orderProperties","_ref7","formattedValue","trim","Array","isArray","_translateDate","str","test","date","Date","isNaN","getTime","toISOString","slice","isDate","translateDate","_isEmpty","TableRow","styles","TableCell","theme","item","join","JSON","stringify","String","sortedAttachments","_sortedAttachments$at","_sortedAttachments$at2","accessUrl","_attachment$title","UnorderedList","_attachment$title2","UnorderedListItem","target","bijlage","_bijlage$accessUrl","_bijlage$accessUrl2","Pagination","previousPage","nextPage","page","totalPages","setCurrentPage","isLoading","Skeleton","height","props","params"],"sourceRoot":""}